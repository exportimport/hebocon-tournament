name: Tournament Testing with Playwright MCP

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  workflow_dispatch: # Allow manual triggering

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "20"

jobs:
  tournament-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright and MCP
        run: |
          npm install -g @anthropic-ai/mcp-server-playwright
          npx playwright install --with-deps chromium

      - name: Start Flask server in background
        run: |
          python3 app.py &
          echo $! > flask_server.pid
          sleep 5  # Wait for server to start

      - name: Wait for server to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:5005/api/data; do sleep 1; done'

      - name: Run Playwright MCP Tests
        run: |
          # Test 1: End-to-End Tournament Flow
          node tests/e2e-tournament-flow.js
          
          # Test 2: OBS Overlay Validation  
          node tests/obs-overlay-validation.js
          
          # Test 3: Multi-Instance Testing
          node tests/multi-instance-sync.js
          
          # Test 4: Visual Regression Testing
          node tests/visual-regression.js
          
          # Test 5: Performance Testing
          node tests/performance-reliability.js
          
          # Test 6: Integration Testing
          node tests/integration-tests.js

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results/
            screenshots/
            playwright-report/

      - name: Upload visual diff artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: visual-diffs
          path: test-results/visual-diffs/

      - name: Stop Flask server
        if: always()
        run: |
          if [ -f flask_server.pid ]; then
            kill $(cat flask_server.pid) || true
            rm flask_server.pid
          fi

      - name: Generate test summary
        if: always()
        run: |
          echo "## 🎮 Tournament Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f test-results/summary.json ]; then
            echo "### Test Summary:" >> $GITHUB_STEP_SUMMARY
            cat test-results/summary.json >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Test results not found" >> $GITHUB_STEP_SUMMARY
          fi